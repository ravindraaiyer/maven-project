pipeline {
	agent { label 'Jenkins-Slave1' }
	parameters {
		string(name: 'Tomcat-Dev', defaultValue: '34.217.28.15', description: 'tomcat dev server')
		string(name: 'Tomcat-Prod', defaultValue: '34.217.28.15', description: 'tomcat Prod server')
		string(name: 'Job-Name', defaultValue: 'PipelineAsCode-Udemy', description: 'This Jenkins Job name')
	}

	triggers {
		pollSCM('* * * * *')
	}

	stages{
        stage('Build'){
            steps {
<<<<<<< HEAD
                sh 'mvn clean package'
		sh "docker build . -t tomcatwebapp:${env.BUILD_ID}"
=======
                sh 'sudo /var/lib/apache-maven/bin/mvn clean package'
>>>>>>> 2b4b7414694781590c99540eab8d095610a30802
            }
            post {
                success {
                    echo 'Now Archiving...'
                    archiveArtifacts artifacts: '**/target/*.war'
                }
            }
	}
        
	stage('Deployment'){
	parallel{    
		stage('Deploy to Staging') {
			steps {
			sh "sudo cp /opt/jenkins/workspace/PipelineAsCode-Udemy/webapp/target/*.war /usr/share/tomcat8/webapps/"
            	}
		}
      		stage('Deploy to Production'){
            		steps{
                		timeout(time:5, unit:'DAYS'){
                		input message:'Approve PRODUCTION Deployment?'
	                }
	                echo 'Deployed To Production'
	        	}
            		post {
                		success {
                    			echo 'Code deployed to Production.'
                		}
             		failure {
                 	   echo 'Production Deployment failed.'
                	}
			}
            	}
        }
    }
    }
}
